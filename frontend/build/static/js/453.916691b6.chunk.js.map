{"version":3,"file":"static/js/453.916691b6.chunk.js","mappings":"oLAMA,MAkDA,EAlDkBA,IAAmB,IAAlB,SAAEC,GAAUD,EAC3B,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MAejB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACHN,IAASO,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQH,SAAEN,KACzCI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaK,SAjBhBC,UACjBC,EAAEC,iBACF,IACI,MACMC,SADiBC,EAAAA,EAAAA,IAAM,CAAEpB,QAAOG,cACfkB,KAAKF,OAC5BG,EAAAA,EAAAA,IAAUH,GACVpB,EAASoB,GACTZ,EAAS,aACb,CAAE,MAAOF,GACLC,EAAS,6DACb,GAOwDK,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAAA,SACIW,KAAK,QACLC,MAAOxB,EACPyB,SAAWR,GAAMhB,EAASgB,EAAES,OAAOF,OACnCG,YAAY,QACZC,UAAQ,QAGhBnB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAAA,SACIW,KAAK,WACLC,MAAOrB,EACPsB,SAAWR,GAAMb,EAAYa,EAAES,OAAOF,OACtCG,YAAY,WACZC,UAAQ,QAGhBhB,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQZ,SAAC,eAExB,C,gHChDd,MAAMkB,EAAMC,IAAAA,OAAa,CACrBC,QAAS,SAIbF,EAAIG,aAAaC,QAAQC,KACrBlB,UACI,MAAMG,GAAQgB,EAAAA,EAAAA,MAId,OAHIhB,IACAiB,EAAOC,QAAQC,cAAa,UAAAC,OAAapB,IAEtCiB,CAAM,IAEhB/B,GACUmC,QAAQC,OAAOpC,KAKvB,MAAMe,EAASsB,GACXb,EAAIc,KAAK,SAAUD,GAiBjBE,EAAgBA,IAClBf,EAAIgB,IAAI,UAGNC,EAAeA,IACjBjB,EAAIgB,IAAI,cAGNE,EAAkBC,GACpBnB,EAAIc,KAAK,aAAcK,GAWrBC,EAAaA,IACfpB,EAAIgB,IAAI,YAGNK,EAAkB7B,GACpBQ,EAAIc,KAAK,eAAgBtB,E","sources":["pages/LoginPage.jsx","utils/api.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../utils/api';\nimport { setToken as saveToken } from '../utils/jwt';\nimport './Login.css'; // Import the CSS file\n\nconst LoginPage = ({ setToken }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await login({ email, password });\n            const token = response.data.token;\n            saveToken(token);\n            setToken(token);\n            navigate('/dashboard');\n        } catch (error) {\n            setError('Login failed. Please check your credentials and try again.');\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <h2>Login</h2>\n            {error && <div style={{ color: 'red' }}>{error}</div>}\n            <form className=\"login-form\" onSubmit={handleSubmit}>\n                <div>\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"Email\"\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Password\"\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginPage;\n","import axios from 'axios';\nimport { getToken } from './jwt';  // Ensure this path is correct based on your project structure\n\n// Setup axios instance\nconst api = axios.create({\n    baseURL: '/api'\n});\n\n// Request interceptor to add the auth token for every request\napi.interceptors.request.use(\n    async (config) => {\n        const token = getToken();\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Simplified API functions\nexport const login = (credentials) => {\n    return api.post(`/login`, credentials);\n};\n\nexport const createUploadLink = () => {\n    return api.post(`/create-link`);\n};\n\nexport const uploadFile = (link, file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post(`/upload/${link}`, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    });\n};\n\nexport const downloadFiles = () => {\n    return api.get(`/files`);\n};\n\nexport const getCustomers = () => {\n    return api.get(`/customers`);\n};\n\nexport const createCustomer = (customerData) => {\n    return api.post(`/customers`, customerData);\n};\n\nexport const updateCustomer = (customerId, customerData) => {\n    return api.put(`/customers/${customerId}`, customerData);\n};\n\nexport const deleteCustomer = (customerId) => {\n    return api.delete(`/customers/${customerId}`);\n};\n\nexport const getVersion = () => {\n    return api.get(`/version`);\n};\n\nexport const postUploadLink = (data) => {\n    return api.post(`/create-link`, data);\n};\n"],"names":["_ref","setToken","email","setEmail","useState","password","setPassword","error","setError","navigate","useNavigate","_jsxs","className","children","_jsx","style","color","onSubmit","async","e","preventDefault","token","login","data","saveToken","type","value","onChange","target","placeholder","required","api","axios","baseURL","interceptors","request","use","getToken","config","headers","Authorization","concat","Promise","reject","credentials","post","downloadFiles","get","getCustomers","createCustomer","customerData","getVersion","postUploadLink"],"sourceRoot":""}