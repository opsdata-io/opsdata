{"version":3,"file":"static/js/620.a5535086.chunk.js","mappings":"0KAIA,MA8DA,EA9DoBA,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,MAAME,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCC,SAAU,GACVC,MAAO,GACPC,KAAM,GACNC,UAAU,IAGRC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BV,EAAY,IAAKD,EAAU,CAACS,GAAOC,GAAQ,EA4B/C,OACIE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJD,EAAAA,EAAAA,MAAA,QAAMG,SA7BOC,UACjBR,EAAES,iBACF,MAAMC,EAAWrB,IAASsB,EAAAA,EAAAA,MAC1B,IACI,MAAMC,QAAiBC,MAAM,aAAc,CACvCC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYP,IAE7BQ,KAAMC,KAAKC,UAAU5B,KAEzB,GAAIoB,EAASS,GAAI,CACb,MAAMC,QAAgBV,EAASW,OAC/BC,QAAQC,IAAI,YAAaH,GAEzBhC,EAAS,SACb,MACIkC,QAAQE,MAAM,yBAA0Bd,EAASe,WAEzD,CAAE,MAAOD,GACLF,QAAQE,MAAM,uBAAwBA,EAC1C,GAOiCrB,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,OAAO3B,KAAK,WAAWC,MAAOV,EAASG,SAAUkC,SAAU9B,EAAc+B,UAAQ,KAC7FxB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,QAAQ3B,KAAK,QAAQC,MAAOV,EAASI,MAAOiC,SAAU9B,EAAc+B,UAAQ,KACxFxB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,OAAO3B,KAAK,OAAOC,MAAOV,EAASK,KAAMgC,SAAU9B,EAAc+B,UAAQ,KACrFxB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,WAAW3B,KAAK,WAAW8B,QAASvC,EAASM,SAAU+B,SAAUA,IAAMpC,EAAY,IAAKD,EAAUM,UAAWN,EAASM,cAClIQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAAQvB,SAAC,gBAExB,C","sources":["pages/AddUserPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\nimport { getToken } from '../utils/jwt'; // Import getToken from jwt utility\n\nconst AddUserPage = ({ token }) => {\n    const navigate = useNavigate(); // useNavigate hook for navigation\n    const [userData, setUserData] = useState({\n        username: '',\n        email: '',\n        role: '',\n        isActive: true,\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserData({ ...userData, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const jwtToken = token || getToken(); // Retrieve the JWT token using the utility function\n        try {\n            const response = await fetch(`/api/users`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${jwtToken}`,\n                },\n                body: JSON.stringify(userData),\n            });\n            if (response.ok) {\n                const newUser = await response.json();\n                console.log('New user:', newUser); // Handle success as needed\n                // Optionally, redirect to user list page or show a success message\n                navigate('/users'); // Redirect to users page after successful creation using navigate\n            } else {\n                console.error('Failed to create user:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error creating user:', error); // Handle error appropriately\n        }\n    };\n\n    return (\n        <div>\n            <h2>User Management</h2>\n            <h3>Add User</h3>\n            <form onSubmit={handleSubmit}>\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value={userData.username} onChange={handleChange} required />\n                <br />\n                <label>Email:</label>\n                <input type=\"email\" name=\"email\" value={userData.email} onChange={handleChange} required />\n                <br />\n                <label>Role:</label>\n                <input type=\"text\" name=\"role\" value={userData.role} onChange={handleChange} required />\n                <br />\n                <label>Active:</label>\n                <input type=\"checkbox\" name=\"isActive\" checked={userData.isActive} onChange={() => setUserData({ ...userData, isActive: !userData.isActive })} />\n                <br />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddUserPage;\n"],"names":["_ref","token","navigate","useNavigate","userData","setUserData","useState","username","email","role","isActive","handleChange","e","name","value","target","_jsxs","children","_jsx","onSubmit","async","preventDefault","jwtToken","getToken","response","fetch","method","headers","Authorization","concat","body","JSON","stringify","ok","newUser","json","console","log","error","statusText","type","onChange","required","checked"],"sourceRoot":""}