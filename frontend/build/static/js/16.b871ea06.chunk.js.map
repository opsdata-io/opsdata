{"version":3,"file":"static/js/16.b871ea06.chunk.js","mappings":"+JAGA,MA4EA,EA5E2BA,IAAgB,IAAf,MAAEC,GAAOD,EACjC,MAAOE,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IA8BnC,OACIO,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,UAAW,OAAQC,WAAY,QAASC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJJ,EAAAA,EAAAA,MAAA,QAAMM,SA/BOC,UACjBC,EAAEC,iBACFZ,GAAW,GACXE,EAAS,IACT,IACI,MAAMW,QAAiBC,MAAM,2BAADC,OAA4BC,mBAAmBtB,IAAgB,CACvFuB,QAAS,CACL,cAAgB,UAADF,OAAYtB,MAGnC,IAAIoB,EAASK,GAIT,MAAM,IAAIC,MAAM,kCAJH,CACb,MAAMC,QAAaP,EAASQ,OAC5BvB,EAAiBsB,EACrB,CAGJ,CAAE,MAAOnB,GACLqB,QAAQrB,MAAM,iCAAkCA,GAChDC,EAAS,oDACb,CAAC,QACGF,GAAW,EACf,GAUkCI,MAAO,CAAEmB,QAAS,OAAQC,WAAY,SAAUC,aAAc,QAASlB,SAAA,EACjGC,EAAAA,EAAAA,KAAA,SACIkB,KAAK,OACLC,GAAG,cACHC,MAAOlC,EACPmC,SAZMlB,IAClBhB,EAAegB,EAAEmB,OAAOF,MAAM,EAYlBG,UAAQ,EACR3B,MAAO,CAAE4B,YAAa,aAE1BxB,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAASO,SAAUlC,EAAQQ,SAAC,cAE5CR,IAAWS,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBACdN,IAASO,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAE8B,MAAO,OAAQ3B,SAAEN,KACzCO,EAAAA,EAAAA,KAAA,OAAAD,SAC8B,IAAzBV,EAAcsC,QAAiBpC,GAG5BI,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEgC,eAAgB,WAAYC,MAAO,OAAQC,OAAQ,kBAAmB/B,SAAA,EAClFC,EAAAA,EAAAA,KAAA,SAAOJ,MAAO,CAAEmC,gBAAiB,WAAYhC,UACzCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAAEkC,OAAQ,iBAAkBE,QAAS,OAAQjC,SAAC,sBAGjEC,EAAAA,EAAAA,KAAA,SAAAD,SACKV,EAAc4C,KAAKC,IAChBlC,EAAAA,EAAAA,KAAA,MAAsBJ,MAAO,CAAEkC,OAAQ,kBAAmB/B,UACtDC,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAAEkC,OAAQ,iBAAkBE,QAAS,OAAQjC,UACpDC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAE,aAAA7B,OAAe2B,EAASf,IAAKpB,SAAEmC,EAASG,iBAF/CH,EAASf,YAV9BnB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yBAoBT,C","sources":["pages/SearchCustomerPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SearchCustomerPage = ({ token }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleSearch = async (e) => {\n        e.preventDefault();  // Prevent the default form submission behavior\n        setLoading(true);  // Set loading to true to indicate search is in progress\n        setError('');  // Clear any existing errors\n        try {\n            const response = await fetch(`/api/customers/search?q=${encodeURIComponent(searchQuery)}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                setSearchResults(data);\n            } else {\n                throw new Error('Failed to fetch search results');  // Throw an error if response is not OK\n            }\n        } catch (error) {\n            console.error('Failed to fetch search results', error);\n            setError('Failed to fetch search results. Please try again.');\n        } finally {\n            setLoading(false);  // Set loading to false after the fetch operation is done\n        }\n    };\n\n    const handleChange = (e) => {\n        setSearchQuery(e.target.value);\n    };\n\n    return (\n        <div style={{ marginTop: '20px', marginLeft: '20px' }}>\n            <h2>Customers</h2>\n            <form onSubmit={handleSearch} style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n                <input\n                    type=\"text\"\n                    id=\"searchQuery\"\n                    value={searchQuery}\n                    onChange={handleChange}\n                    required\n                    style={{ marginRight: '0.5rem' }}\n                />\n                <button type=\"submit\" disabled={loading}>Search</button>\n            </form>\n            {loading && <p>Searching...</p>}\n            {error && <div style={{ color: 'red' }}>{error}</div>}\n            <div>\n                {searchResults.length === 0 && !loading ? (\n                    <p>No results found</p>\n                ) : (\n                    <table style={{ borderCollapse: 'collapse', width: '100%', border: '1px solid #ccc' }}>\n                        <thead style={{ backgroundColor: '#f2f2f2' }}>\n                            <tr>\n                                <th style={{ border: '1px solid #ccc', padding: '8px' }}>Company Name</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {searchResults.map((customer) => (\n                                <tr key={customer.id} style={{ border: '1px solid #ccc' }}>\n                                    <td style={{ border: '1px solid #ccc', padding: '8px' }}>\n                                        <Link to={`/customer/${customer.id}`}>{customer.companyName}</Link>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchCustomerPage;\n"],"names":["_ref","token","searchQuery","setSearchQuery","useState","searchResults","setSearchResults","loading","setLoading","error","setError","_jsxs","style","marginTop","marginLeft","children","_jsx","onSubmit","async","e","preventDefault","response","fetch","concat","encodeURIComponent","headers","ok","Error","data","json","console","display","alignItems","marginBottom","type","id","value","onChange","target","required","marginRight","disabled","color","length","borderCollapse","width","border","backgroundColor","padding","map","customer","Link","to","companyName"],"sourceRoot":""}